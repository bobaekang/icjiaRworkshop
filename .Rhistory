"Central", "Southern", "Central", "Northern", "Central",
"Southern", "Central", "Southern", "Central", "Southern",
rep("Southern", 2), rep("Northern", 2), "Southern",
"Northren", "Central"
)
a == as.character(dplyr::arrange(regions, county)$region)
a <- c(
"Central", "Southern", "Southern", "Northern", "Central",
"Central", "Southern", "Northern", rep("Central", 2),
"Central", rep("Southern", 3), "Central",
"Cook", rep("Southern", 2), "Northern", "Central",
"Central", "Northern", "Central", rep("Southern", 2),
"Southern", "Central", "Southern", "Central", "Southern",
"Central", "Northern", "Southern", "Central", "Southern",
rep("Central", 3), rep("Southern", 2),
rep("Southern", 2), "Northern", "Southern", "Northern",
"Central", "Northern", "Central", rep("Northern", 2),
"Southern", "Northern", rep("Central", 3),
"Central", rep("Southern", 2), rep("Central", 2),
"Southern", "Central", "Northern", rep("Central", 2),
"Central", "Southern", rep("Central", 3),
"Northern", "Central", "Southern", rep("Central", 2),
rep("Southern", 2), "Central", rep("Southern", 2),
"Central", "Southern", rep("Central", 3),
"Central", "Southern", "Central", "Northern", "Central",
"Southern", "Central", "Southern", "Central", "Southern",
rep("Southern", 2), rep("Northern", 2), "Southern",
"Northern", "Central"
)
a == as.character(dplyr::arrange(regions, county)$region)
counties@data
# import shapefile
counties <- sp::spTransform(
x = rgdal::readOGR(dsn = "data-raw", layer = "counties"),
CRSobj = sp::CRS("+proj=longlat +ellps=GRS80")
)
counties@data
View(regions)
dplyr::arrange(
dplyr::transmute(
counties@data,
name = as.character(CNTYNAM_LO),
fips = FIPS_CODE,
idoc = IDOC_CODE,
circuit = CIRCUIT,
region = REGION,
type = ifelse(COUNTYTYPE == "South", "Southern",
ifelse(COUNTYTYPE == "North", "Northern", COUNTYTYPE))
), name
)
dplyr::arrange(
dplyr::transmute(
counties@data,
name = as.character(CNTYNAM_LO),
fips = FIPS_CODE,
idoc = IDOC_CODE,
circuit = CIRCUIT,
type = COUNTYTYPE,
region = ifelse(REGION == "South", "Southern",
ifelse(REGION == "North", "Northern", REGION))
), name
)
dplyr::arrange(
dplyr::transmute(
counties@data,
name = as.character(CNTYNAM_LO),
fips = FIPS_CODE,
idoc = IDOC_CODE,
circuit = CIRCUIT,
type = COUNTYTYPE,
region = ifelse(REGION == "South", "Southern",
ifelse(REGION == "North", "Northern", as.character(REGION)))
), name
)
dplyr::arrange(
dplyr::transmute(
counties@data,
name = as.character(CNTYNAM_LO),
fips = FIPS_CODE,
idoc = IDOC_CODE,
circuit = CIRCUIT,
type = COUNTYTYPE,
region = ifelse(
CNTYNAM_LO == "Cook", "Cook", ifelse(
REGION == "South", "Southern", ifelse(
REGION == "North", "Northern", "Central"
)
)
)
), name
)
counties@data <- dplyr::arrange(
dplyr::transmute(
counties@data,
name = as.character(CNTYNAM_LO),
fips = FIPS_CODE,
idoc = IDOC_CODE,
circuit = CIRCUIT,
type = COUNTYTYPE,
region = ifelse(
CNTYNAM_LO == "Cook", "Cook", ifelse(
REGION == "South", "Southern", ifelse(
REGION == "North", "Northern", "Central"
)
)
)
), name
)
counties@data$name <- as.factor(county_std)
counties@data$name
counties@data
class(counties@data$circuit)
# get standard county names
source("data-raw/std_county_names.R")
# import shapefile
counties <- sp::spTransform(
x = rgdal::readOGR(dsn = "data-raw", layer = "counties"),
CRSobj = sp::CRS("+proj=longlat +ellps=GRS80")
)
# prepare data
counties@data <- dplyr::arrange(
dplyr::transmute(
counties@data,
name = as.character(CNTYNAM_LO),
fips = FIPS_CODE,
idoc = IDOC_CODE,
circuit = CIRCUIT,
type = COUNTYTYPE,
region = ifelse(
CNTYNAM_LO == "Cook", "Cook", ifelse(
REGION == "South", "Southern", ifelse(
REGION == "North", "Northern", "Central"
)
)
)
), name
)
counties@data$name <- as.factor(county_std)
# import shapefile
counties <- sp::spTransform(
x = rgdal::readOGR(dsn = "data-raw", layer = "counties"),
CRSobj = sp::CRS("+proj=longlat +ellps=GRS80")
)
# prepare data
counties@data <- dplyr::arrange(
dplyr::transmute(
counties@data,
name = as.character(CNTYNAM_LO),
type = COUNTYTYPE,
region = ifelse(
CNTYNAM_LO == "Cook", "Cook", ifelse(
REGION == "South", "Southern", ifelse(
REGION == "North", "Northern", "Central"
)
)
).
circuit = CIRCUIT,
idoc = IDOC_CODE,
fips = FIPS_CODE
), name
)
counties@data$name <- as.factor(county_std)
counties@data <- dplyr::arrange(
dplyr::transmute(
counties@data,
name = as.character(CNTYNAM_LO),
type = COUNTYTYPE,
region = ifelse(
CNTYNAM_LO == "Cook", "Cook", ifelse(
REGION == "South", "Southern", ifelse(
REGION == "North", "Northern", "Central"
)
)
),
circuit = CIRCUIT,
idoc = IDOC_CODE,
fips = FIPS_CODE
), name
)
counties@data$name <- as.factor(county_std)
counties@data
# get standard county names
source("data-raw/std_county_names.R")
# import shapefile
counties <- sp::spTransform(
x = rgdal::readOGR(dsn = "data-raw", layer = "counties"),
CRSobj = sp::CRS("+proj=longlat +ellps=GRS80")
)
# prepare data
counties@data <- dplyr::arrange(
dplyr::transmute(
counties@data,
name = as.character(CNTYNAM_LO),
type = COUNTYTYPE,
region = ifelse(
CNTYNAM_LO == "Cook", "Cook", ifelse(
REGION == "South", "Southern", ifelse(
REGION == "North", "Northern", "Central"
)
)
),
circuit = CIRCUIT,
idoc = IDOC_CODE,
fips = FIPS_CODE
), name
)
counties@data$name <- as.factor(county_std)
devtools::use_data(counties, overwrite = TRUE)
devtools::find_rtools()
devtools::has_devel()
devtools::build()
devtools::install()
tmap::qtm(counties, fill = "region")
# get standard county names
source("data-raw/std_county_names.R")
# import shapefile
counties <- sp::spTransform(
x = rgdal::readOGR(dsn = "data-raw", layer = "counties"),
CRSobj = sp::CRS("+proj=longlat +ellps=GRS80")
)
tmap::qtm(counties, fill = "REGION")
counties@data <- dplyr::arrange(
dplyr::transmute(
counties@data,
name = as.character(CNTYNAM_LO),
type = COUNTYTYPE,
region = ifelse(
CNTYNAM_LO == "Cook", "Cook", ifelse(
REGION == "South", "Southern", ifelse(
REGION == "North", "Northern", "Central"
)
)
),
circuit = CIRCUIT,
idoc = IDOC_CODE,
fips = FIPS_CODE
), name
)
tmap::qtm(counties, fill = "REGION")
tmap::qtm(counties, fill = "region")
counties <- sp::spTransform(
x = rgdal::readOGR(dsn = "data-raw", layer = "counties"),
CRSobj = sp::CRS("+proj=longlat +ellps=GRS80")
)
# prepare data
counties@data <- dplyr::arrange(
dplyr::transmute(
counties@data,
name = as.character(CNTYNAM_LO),
type = COUNTYTYPE,
region = ifelse(
as.character(CNTYNAM_LO) == "Cook", "Cook", ifelse(
as.character(REGION) == "South", "Southern", ifelse(
aS.character(REGION) == "North", "Northern", "Central"
)
)
),
circuit = CIRCUIT,
idoc = IDOC_CODE,
fips = FIPS_CODE
), name
)
tmap::qtm(counties, fill = "region")
counties <- sp::spTransform(
x = rgdal::readOGR(dsn = "data-raw", layer = "counties"),
CRSobj = sp::CRS("+proj=longlat +ellps=GRS80")
)
dplyr::arrange(
dplyr::transmute(
counties@data,
name = as.character(CNTYNAM_LO),
type = COUNTYTYPE,
region = ifelse(
as.character(CNTYNAM_LO) == "Cook", "Cook", ifelse(
as.character(REGION) == "South", "Southern", ifelse(
as.character(REGION) == "North", "Northern", "Central"
)
)
),
circuit = CIRCUIT,
idoc = IDOC_CODE,
fips = FIPS_CODE
), name
)
?as.charactercounties@data
counties@data
counties@data %>%
transmute(
counties@data,
name = as.character(CNTYNAM_LO),
type = COUNTYTYPE,
region = ifelse(
as.character(CNTYNAM_LO) == "Cook", "Cook", ifelse(
as.character(REGION) == "South", "Southern", ifelse(
as.character(REGION) == "North", "Northern", "Central"
)
)
),
circuit = CIRCUIT,
idoc = IDOC_CODE,
fips = FIPS_CODE
)
library(dplyr)
counties@data %>%
transmute(
counties@data,
name = as.character(CNTYNAM_LO),
type = COUNTYTYPE,
region = ifelse(
as.character(CNTYNAM_LO) == "Cook", "Cook", ifelse(
as.character(REGION) == "South", "Southern", ifelse(
as.character(REGION) == "North", "Northern", "Central"
)
)
),
circuit = CIRCUIT,
idoc = IDOC_CODE,
fips = FIPS_CODE
)
counties@data %>%
transmute(
name = as.character(CNTYNAM_LO),
type = COUNTYTYPE,
region = ifelse(
as.character(CNTYNAM_LO) == "Cook", "Cook", ifelse(
as.character(REGION) == "South", "Southern", ifelse(
as.character(REGION) == "North", "Northern", "Central"
)
)
),
circuit = CIRCUIT,
idoc = IDOC_CODE,
fips = FIPS_CODE
)
counties@data <- counties@data %>%
transmute(
name = as.character(CNTYNAM_LO),
type = COUNTYTYPE,
region = ifelse(
as.character(CNTYNAM_LO) == "Cook", "Cook", ifelse(
as.character(REGION) == "South", "Southern", ifelse(
as.character(REGION) == "North", "Northern", "Central"
)
)
),
circuit = CIRCUIT,
idoc = IDOC_CODE,
fips = FIPS_CODE
)
tmap::qtm(counties, fill = "region")
counties@data$name <- as.factor(county_std)
tmap::qtm(counties, fill = "region")
county_std
counties <- sp::spTransform(
x = rgdal::readOGR(dsn = "data-raw", layer = "counties"),
CRSobj = sp::CRS("+proj=longlat +ellps=GRS80")
)
# prepare data
counties@data <- counties@data %>%
transmute(
name = as.character(CNTYNAM_LO),
type = COUNTYTYPE,
region = ifelse(
as.character(CNTYNAM_LO) == "Cook", "Cook", ifelse(
as.character(REGION) == "South", "Southern", ifelse(
as.character(REGION) == "North", "Northern", "Central"
)
)
),
circuit = CIRCUIT,
idoc = IDOC_CODE,
fips = FIPS_CODE
) %>%
arrange(name)
tmap::qtm(counties, fill = "region")
counties@data %>%
transmute(
name = as.character(CNTYNAM_LO),
type = COUNTYTYPE,
region = ifelse(
as.character(CNTYNAM_LO) == "Cook", "Cook", ifelse(
as.character(REGION) == "South", "Southern", ifelse(
as.character(REGION) == "North", "Northern", "Central"
)
)
),
circuit = CIRCUIT,
idoc = IDOC_CODE,
fips = FIPS_CODE
)
# import shapefile
counties <- sp::spTransform(
x = rgdal::readOGR(dsn = "data-raw", layer = "counties"),
CRSobj = sp::CRS("+proj=longlat +ellps=GRS80")
)
# prepare data
counties@data <- counties@data %>%
transmute(
name = as.character(CNTYNAM_LO),
type = COUNTYTYPE,
region = ifelse(
as.character(CNTYNAM_LO) == "Cook", "Cook", ifelse(
as.character(REGION) == "South", "Southern", ifelse(
as.character(REGION) == "North", "Northern", "Central"
)
)
),
circuit = CIRCUIT,
idoc = IDOC_CODE,
fips = FIPS_CODE
)
?seq_along
seq_along(102)
seq_along(1, 102)
seq_along(1:102)
seq_along(1:102, 2)
seq(1:102, 2)
seq(1, 102, 2)
seq(1, 102*2, 2)
data.frame(
name = county_std,
fips = 17000 + seq(1, 102*2, 2)
)
counties <- sp::spTransform(
x = rgdal::readOGR(dsn = "data-raw", layer = "counties"),
CRSobj = sp::CRS("+proj=longlat +ellps=GRS80")
)
counties@data$FIPS_CODE
as.factor(17000 + seq(1, 102*2, 2))
counties@data %>%
left_join(
data.frame(
name = county_std,
fips = as.factor(17000 + seq(1, 102*2, 2))
)
)
counties@data %>%
left_join(
data.frame(
name = county_std,
FIPS_CODE = as.factor(17000 + seq(1, 102*2, 2))
)
)
# import shapefile
counties <- sp::spTransform(
x = rgdal::readOGR(dsn = "data-raw", layer = "counties"),
CRSobj = sp::CRS("+proj=longlat +ellps=GRS80")
)
# prepare data
counties@data <- counties@data %>%
left_join(
data.frame(
name = county_std,
FIPS_CODE = as.factor(17000 + seq(1, 102*2, 2))
)
) %>%
transmute(
name = name,
type = COUNTYTYPE,
region = ifelse(
as.character(CNTYNAM_LO) == "Cook", "Cook", ifelse(
as.character(REGION) == "South", "Southern", ifelse(
as.character(REGION) == "North", "Northern", "Central"
)
)
),
circuit = CIRCUIT,
idoc = IDOC_CODE,
fips = FIPS_CODE
)
counties@data$name <- as.factor(county_std)
tmap::qtm(counties, fill = "region")
counties@data
# import shapefile
counties <- sp::spTransform(
x = rgdal::readOGR(dsn = "data-raw", layer = "counties"),
CRSobj = sp::CRS("+proj=longlat +ellps=GRS80")
)
# prepare data
counties@data <- counties@data %>%
left_join(
data.frame(
name = county_std,
FIPS_CODE = as.factor(17000 + seq(1, 102*2, 2))
)
) %>%
transmute(
name = name,
type = COUNTYTYPE,
region = ifelse(
as.character(CNTYNAM_LO) == "Cook", "Cook", ifelse(
as.character(REGION) == "South", "Southern", ifelse(
as.character(REGION) == "North", "Northern", "Central"
)
)
),
circuit = CIRCUIT,
idoc = IDOC_CODE,
fips = FIPS_CODE
)
tmap::qtm(counties, fill = "region")
counties@data
devtools::use_data(counties, overwrite = TRUE)
devtools::find_rtools()
devtools::has_devel()
devtools::build()
devtools::install()
remove.packages("icjiar")
devtools::install()
counties@data %>% filter(region == "Central")
counties@data %>% filter(region == "Central") %>% arrange(type)
icjiar::crimes_isp
