library(devtools)
setwd("..")
find_rtools()
has_devel()
install()
icjiar::populations
icjiar::crimes_fbi
icjiar::crimes_isp
icjiar::fbicrime
icjiar::ispcrime
populations
populations <- read.csv("data-raw/populations.csv")
populations
library(dplyr)
# library(tidyr)
# get standard county names
source("std_county_names.R")
# get paths
path_pop_2000s <- "https://data.illinois.gov/dataset/27a3da67-23d5-494e-b5f4-8ec2b4db2220/resource/f048f107-74d2-4df0-990c-09f214c0bf35/download/data.csv"
path_pop_2010s <- "population_estimate_2017.csv"
# read files
pop_2000s <- read.csv(path_pop_2000s)
pop_2010s <- read.csv(path_pop_2010s, skip = 1)
# define function to clean data
clean_pop <- function(pop, decade = "2000s") {
gather_years <- function(pop) {
pop %>%
tidyr::gather(
key = "year",
value = "population",
2:ncol(.)
) %>%
mutate(year = as.integer(substr(year, 3, 7))) %>%
select(year, county, population)
}
if (decade == "2000s") {
output <- pop %>%
filter(county != "Illinois") %>%
select(ncol(.), 1:(ncol(.) - 1)) %>%
mutate(county = as.character(county)) %>%
gather_years()
return(output)
} else if (decade == "2010s") {
output <- pop %>%
select(3, 6:ncol(.))
colnames(output) <- c("county", paste0("X_", 2010:(2010 + ncol(output) - 2)))
output <- output %>%
mutate(county = gsub(" County, Illinois", "", as.character(county))) %>%
gather_years()
return(output)
}
}
# clean and concatenate
populations <- rbind(
clean_pop(pop_2000s),
clean_pop(pop_2010s, decade = "2010s")
)
# redo county names
populations <- populations %>%
arrange(year, county) %>%
mutate(county = rep(county_std, nrow(.) / 102))
setwd("./data-raw")
library(dplyr)
# library(tidyr)
# get standard county names
source("std_county_names.R")
# get paths
path_pop_2000s <- "https://data.illinois.gov/dataset/27a3da67-23d5-494e-b5f4-8ec2b4db2220/resource/f048f107-74d2-4df0-990c-09f214c0bf35/download/data.csv"
path_pop_2010s <- "population_estimate_2017.csv"
# read files
pop_2000s <- read.csv(path_pop_2000s)
pop_2010s <- read.csv(path_pop_2010s, skip = 1)
# define function to clean data
clean_pop <- function(pop, decade = "2000s") {
gather_years <- function(pop) {
pop %>%
tidyr::gather(
key = "year",
value = "population",
2:ncol(.)
) %>%
mutate(year = as.integer(substr(year, 3, 7))) %>%
select(year, county, population)
}
if (decade == "2000s") {
output <- pop %>%
filter(county != "Illinois") %>%
select(ncol(.), 1:(ncol(.) - 1)) %>%
mutate(county = as.character(county)) %>%
gather_years()
return(output)
} else if (decade == "2010s") {
output <- pop %>%
select(3, 6:ncol(.))
colnames(output) <- c("county", paste0("X_", 2010:(2010 + ncol(output) - 2)))
output <- output %>%
mutate(county = gsub(" County, Illinois", "", as.character(county))) %>%
gather_years()
return(output)
}
}
# clean and concatenate
populations <- rbind(
clean_pop(pop_2000s),
clean_pop(pop_2010s, decade = "2010s")
)
# redo county names
populations <- populations %>%
arrange(year, county) %>%
mutate(county = rep(county_std, nrow(.) / 102))
populations
?write.csv
write.csv(populations, "populations.csv", row.names = FALSE)
# clear environmet
rm(list = ls())
library(dplyr)
# library(readxl)
# library(foreign)
# get standard county names
source("std_county_names.R")
# get file paths
dirname = "crimes"
if (!dir.exsits(dirname)) {
source("crime_download.R")
}
paths_fbi <- paste0(dirname, "/", list.files(path = dirname, pattern = "^fbi.*"))
paths_isp <- paste0(dirname, "/", list.files(path = dirname, pattern = "^isp.*"))
# define functions to read files
read_fbi <- function(path) {
newnames <- c("county", "violent_crime", "murder", "rape_old", "rape_new", "robbery", "assault", "property_crime", "burglary", "larcenytft", "mvtft", "arson", "year")
output <- readxl::read_excel(path, skip = 5) %>%
select(2:ncol(.)) %>%
arrange(County) %>%
mutate(year = as.integer(gsub("\\D+", "", path)))
if (ncol(output) == 12) {
output <- output %>%
mutate(rape_new = NA) %>%
select(1:3, 13, 4:12)
}
colnames(output) <- newnames
output <- output %>%
filter(!is.na(county)) %>%
select(year, county, violent_crime:arson)
return(output)
}
read_isp <- function(path) {
yearnum <- substr(gsub("\\D+", "", path), 3, 4)
newnames <- c("county", "murder", "rape", "robbery", "assault", "burglary", "larcenytft", "mvtft", "arson")
target_cols <- c("murder", "rape", "rob", "asslt", "burg", "larc", "auto", "arson")
if (grepl("2015", path)) {
target_cols <- c("CH", "Rape", "Rob", "AggBA", "Burg", "Theft", "MVT", "Arson")
}
if (grepl("dbf$", path)) {
output <- foreign::read.dbf(path)
output <- output %>%
select(COUNTY, paste0(toupper(target_cols), yearnum)) %>%
group_by(COUNTY) %>%
mutate_if(is.numeric, sum) %>%
ungroup() %>%
unique()
} else {
clean <- function(output, yearnum) {
output %>%
filter(is.na(Agency)) %>%
select(
County,
paste0(
paste0(
toupper(substr(target_cols, 1, 1)),
substr(target_cols, 2, nchar(target_cols))
),
yearnum
)
) %>%
mutate_at(vars(matches("[^county]")), as.numeric)
}
if (grepl("2011", path)) {
output <- readxl::read_excel(path, skip = 2, na = c("", "--"))
output10 <- clean(output, "10") %>% mutate(year = 2010L)
output11 <- clean(output, "11") %>% mutate(year = 2011L)
colnames(output10) <- c(newnames, "year")
colnames(output11) <- c(newnames, "year")
output <- rbind(output10, output11) %>%
mutate(
county = as.character(county),
violent_crime = murder + rape + robbery + assault,
property_crime = burglary + larcenytft + mvtft + arson
) %>%
select(year, county, violent_crime, murder:assault, property_crime, burglary:arson)
return(output)
} else {
output <- readxl::read_excel(path, na = c("", "--"))
output <- clean(output, yearnum)
}
}
colnames(output) <- newnames
output <- output %>%
mutate(
county = as.character(county),
year = as.integer(paste0("20", yearnum)),
violent_crime = murder + rape + robbery + assault,
property_crime = burglary + larcenytft + mvtft + arson
) %>%
select(year, county, violent_crime, murder:assault, property_crime, burglary:arson)
return(output)
}
# read all files
dfs_fbi <- lapply(paths_fbi, read_fbi)
dfs_isp <- lapply(paths_isp, read_isp)
# combine each into a single table
crimes_fbi <- do.call("rbind", dfs_fbi)
crimes_isp <- do.call("rbind", dfs_isp)
# redo county names
crimes_fbi <- crimes_fbi %>%
arrange(year, county) %>%
mutate(
county = ifelse(
county %in% c("DuPage", "Dupage"),
"Du Page",
county
)
)
crimes_isp <- crimes_isp %>%
arrange(year, county) %>%
mutate(county = rep(county_std, nrow(.) / 102))
# export data
write.csv(crimes_fbi, "crimes_fbi.csv", row.names = TRUE)
write.csv(crimes_isp, "crimes_isp.csv", row.names = TRUE)
write.csv(crimes_fbi, "crimes_fbi.csv", row.names = TRUE)
write.csv(crimes_isp, "crimes_isp.csv", row.names = TRUE)
write.csv(crimes_fbi, "crimes_fbi.csv", row.names = FALSE)
write.csv(crimes_isp, "crimes_isp.csv", row.names = FALSE)
# import data (old)
fbicrime <- read.csv("data-raw/fbicrime.csv")
ispcrime <- read.csv("data-raw/ispcrime.csv")
# import data (new)
crimes_fbi <- read.csv("data-raw/crimes_fbi.csv")
crimes_isp <- read.csv("data-raw/crimes_isp.csv")
# use data
devtools::use_data(fbicrime, ispcrime, crimes_fbi, crimes_isp, overwrite = TRUE)
setwd("..")
# import data (old)
fbicrime <- read.csv("data-raw/fbicrime.csv")
ispcrime <- read.csv("data-raw/ispcrime.csv")
# import data (new)
crimes_fbi <- read.csv("data-raw/crimes_fbi.csv")
crimes_isp <- read.csv("data-raw/crimes_isp.csv")
# use data
devtools::use_data(fbicrime, ispcrime, crimes_fbi, crimes_isp, overwrite = TRUE)
# import data (new)
populations <- read.csv("data-raw/populations.csv")
# use data
devtools::use_data(populations, overwrite = TRUE)
View(crimes_fbi)
View(crimes_isp)
View(populations)
tail(populations)
install()
library(icjiar)
library(icjiar)
crimes_fbi
str(crimes)
str(crimes_fbi)
# import data (old)
fbicrime <- read.csv("data-raw/fbicrime.csv")
ispcrime <- read.csv("data-raw/ispcrime.csv")
# import data (new)
crimes_fbi <- read.csv("data-raw/crimes_fbi.csv")
crimes_isp <- read.csv("data-raw/crimes_isp.csv")
# use data
devtools::use_data(fbicrime, ispcrime, crimes_fbi, crimes_isp, overwrite = TRUE)
View(crimes_fbi)
# import data (new)
populations <- read.csv("data-raw/populations.csv")
# use data
devtools::use_data(populations, overwrite = TRUE)
populations
install()
library(icjiar)
str(crimes_fbi)
install()
library(icjiar)
str(crimes_fbi)
# import data (new)
populations <- read.csv("data-raw/populations.csv")
# use data
devtools::use_data(populations, overwrite = TRUE)
# import data (old)
fbicrime <- read.csv("data-raw/fbicrime.csv")
ispcrime <- read.csv("data-raw/ispcrime.csv")
# import data (new)
crimes_fbi <- read.csv("data-raw/crimes_fbi.csv")
crimes_isp <- read.csv("data-raw/crimes_isp.csv")
# use data
devtools::use_data(fbicrime, ispcrime, crimes_fbi, crimes_isp, overwrite = TRUE)
install()
crimes_fbi
install.packages("icjiar")
install.packages("icjiar")
install()
library(devtools)
find_rtools()
has_devel()
install()
library(icjiar)
str(crimes_fbi)
str(crimes_isp])
str(crimes_isp)
str(populations)
